{"version":3,"sources":["odin-sketch/css/scss/styles.scss","../src/scss/base/_reset.scss","odin-sketch/css/scss/styles.css","../src/scss/base/_var.scss","../src/scss/base/_foundationMQ.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@use 'sass:math';\r\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100..900&display=swap\");\r\n\r\n@import \"../../../../src/scss/base/var\";\r\n@import \"../../../../src/scss/base/reset\";\r\n@import \"../../../../src/scss/base/foundationMQ.scss\";\r\n\r\nbody {\r\n    background: lighten($bodyBackground, 5%);\r\n    color: $bodyText;\r\n    font-family: \"Roboto Slab\", serif;\r\n    height: 100vh;\r\n    height: 100dvh;\r\n} \r\n\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect,\r\na {\r\n    -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n$sidebarWidth: 490px;\r\n\r\n.game {\r\n    height: 100%;\r\n    display: flex;\r\n    @include breakpoint(medium down) {\r\n        padding: 100px 10% 100px;\r\n    }\r\n\r\n    &-title {\r\n        font-size: 49px;\r\n        margin-bottom: 42px;\r\n        \r\n        @include breakpoint(medium down) {\r\n            font-size: 35px;\r\n            margin-bottom: 14px;\r\n        }\r\n    }\r\n\r\n    p {\r\n        margin-bottom: 50px;\r\n        font-size: 18px;\r\n        opacity: .63;\r\n    }\r\n\r\n    &-sidebar {\r\n        overflow: auto;\r\n        z-index: 100;\r\n        \r\n        @include breakpoint(large) {\r\n            top: 0;\r\n            left: 0;\r\n            width: $sidebarWidth;\r\n            padding: 50px;\r\n            height: 100%;\r\n            background: $bodyBackground;\r\n        }\r\n        \r\n        @include breakpoint(medium down) {\r\n            position: unset;\r\n        }\r\n\r\n        .game-title-container {\r\n            @include breakpoint(medium down) {\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                background: $bodyBackground;\r\n                overflow: auto;\r\n                z-index: 100;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                padding: 20px;\r\n                height: auto;\r\n\r\n                p {\r\n                    margin: 0;\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    &-container {\r\n        @include breakpoint(medium down) {\r\n            width: 100%;\r\n            margin: 50px auto;\r\n            max-width: 512px;\r\n        }\r\n        @include breakpoint(large) {\r\n            position: fixed;\r\n            width: calc(100% - $sidebarWidth);\r\n            left: $sidebarWidth;\r\n            padding: 100px 0;\r\n        }\r\n        position: relative;\r\n        height: 100%;\r\n\r\n        .grid-outer {\r\n            width: 100%;\r\n            position: relative;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            @include breakpoint(medium down) {\r\n                width: 100%;\r\n                height: 0;\r\n                padding-bottom: 100%;\r\n                overflow: hidden;\r\n            }\r\n            \r\n            .grid-container {\r\n                width: 512px;\r\n                height: 512px;\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n\r\n                @include breakpoint(medium down) {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                }\r\n            \r\n            \r\n                .grid-cell {\r\n                    // box-shadow: \r\n                    // inset 0 0 0 0.5px rgba(#808080, 0.14),\r\n                    //       0 0 0 0.5px rgba(#808080, 0.14);\r\n                    width: calc(100% / var(--cells));\r\n                    height: calc(100% / var(--cells));\r\n                    background-color: transparent;\r\n                    overflow: hidden;\r\n                    position: relative;\r\n\r\n                    &:after {\r\n                        content: \"\";\r\n                        position: absolute;\r\n                        top: 0;\r\n                        left: 0;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        // box-shadow: inset 0 0 0 0.5px rgba(#808080, 0.2);\r\n                        border: 1px solid rgba(80, 80, 80, 0.2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n\r\n.game-options {\r\n\r\n    @include breakpoint(medium down) {\r\n        position: fixed;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        background: #070707;\r\n        transform: translateY(calc(100% - 80px));\r\n        transition: all 0.25s ease-out;\r\n        height: auto;\r\n        max-height: 70vh;\r\n        max-height: 70dvh;\r\n        overflow: hidden;\r\n\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-template-areas: \"title title\" \r\n                             \"size background\" \r\n                             \"color color\";\r\n\r\n        &.opened {\r\n            transform: translateY(0);\r\n            overflow: auto;\r\n        }\r\n    }\r\n\r\n    @include breakpoint(small only) {\r\n        grid-template-columns: repeat(1, 1fr);\r\n        grid-template-areas: \"title\" \"size\" \"background\" \"color\";\r\n    }\r\n\r\n    .option-category-title {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    [class*=\"game-options\"] {\r\n        @include breakpoint(medium down) {\r\n            padding: 20px 40px;\r\n        }\r\n    }\r\n\r\n    &-grid-size {\r\n        margin-bottom: 49px;\r\n\r\n        @include breakpoint(medium down) {\r\n            grid-area: size;\r\n        }\r\n\r\n        label {\r\n            display: grid;\r\n            grid-template-columns: auto 100px;\r\n            grid-gap: 50px;\r\n        }\r\n    }\r\n\r\n    &-background {\r\n        margin-bottom: 49px;\r\n\r\n        @include breakpoint(medium down) {\r\n            grid-area: background;\r\n        }\r\n\r\n        .background-list {\r\n            display: flex;\r\n            gap: 28px;\r\n\r\n            &-item {\r\n                width: 70px;\r\n                height: 70px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: flex-start;\r\n\r\n                button {\r\n                    position: relative;\r\n                    width: 56px;\r\n                    height: 56px;\r\n                    border-radius: 50%;\r\n                    border: none;\r\n                    outline: none;\r\n                    box-shadow: 0px 0px 0px 2px rgba($bodyText, 0.14);\r\n                    cursor: pointer;\r\n                    opacity: 0.35;\r\n\r\n                    &.selected {\r\n                        opacity: 1;\r\n                        box-shadow: 0px 0px 0px 5px rgba($bodyText, 0.21);\r\n                    }\r\n\r\n                    span {\r\n                        position: absolute;\r\n                        bottom: 0;\r\n                        left: 50%;\r\n                        transform: translate(-50%, 100%);\r\n                        color: $bodyText;\r\n                        padding: 7px 0;\r\n                        text-align: center;\r\n                    }\r\n\r\n                    &.white {background: #fff;}\r\n                    &.black {background: #000;}\r\n                    &.transparent {\r\n                        background: transparent;\r\n                        background-image: \r\n                            linear-gradient(90deg, rgba($bodyText, 0.14) 49%, transparent 50%),\r\n                            linear-gradient(0deg, rgba($bodyText, 0.14) 49%, transparent 50%);\r\n                        background-size: 14px 14px;\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &-pencil-color {\r\n        margin-bottom: 49px;\r\n        @include breakpoint(medium down) {\r\n            grid-area: color;\r\n        }\r\n\r\n        .color-list {\r\n\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            gap: 10px;\r\n\r\n            &-item {\r\n                width: 70px;\r\n                height: 70px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: flex-start;\r\n                margin-bottom: 10px;\r\n\r\n                button {\r\n                    position: relative;\r\n                    width: 56px;\r\n                    height: 56px;\r\n                    border-radius: 50%;\r\n                    border: none;\r\n                    outline: none;\r\n                    box-shadow: 0px 0px 0px 2px rgba($bodyText, 0.14);\r\n                    cursor: pointer;\r\n                    opacity: 0.35;\r\n\r\n                    &.selected {\r\n                        opacity: 1;\r\n                        box-shadow: 0px 0px 0px 5px rgba($bodyText, 0.21);\r\n                    }\r\n\r\n                    &.white {background: #ffffff}\r\n                    &.black {background: #000000}\r\n                    &.red {background: #C62828  }\r\n                    &.orange {background: #F57C00  }\r\n                    &.yellow {background: #FDD835  }\r\n                    &.green {background: #8BC34A}\r\n                    &.blue {background: #1976D2 }\r\n                    &.indigo {background: #AB47BC }\r\n                    &.violet {background: #673AB7 }\r\n                    &.clear {background: linear-gradient(90deg, rgba($bodyText, 0.14) 49%, transparent 50%),\r\n                        linear-gradient(0deg, rgba($bodyText, 0.14) 49%, transparent 50%)}\r\n\r\n                    span {\r\n                        position: absolute;\r\n                        bottom: 0;\r\n                        left: 50%;\r\n                        transform: translate(-50%, 100%);\r\n                        color: $bodyText;\r\n                        padding: 7px 0;\r\n                        text-align: center;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // &-actions {\r\n    //     display: grid;\r\n    //     grid-template-columns: 1fr 1fr;\r\n    //     grid-gap: 20px;\r\n\r\n    // }\r\n\r\n}\r\n\r\n.actions  {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    padding: 50px 0;\r\n\r\n    @include breakpoint(medium down) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 20px;\r\n        padding-bottom: 150px;\r\n    }\r\n\r\n    .action-btn {\r\n        padding: 10px 25px;\r\n        margin: 0 10px;\r\n        \r\n        @include breakpoint(medium down) {\r\n            margin: 0;\r\n            padding: 10px 10px;\r\n        }\r\n    }\r\n}\r\n\r\n.action-btn {\r\n    border: none;\r\n    height: 42px;\r\n    border-radius: 8px;\r\n    font-family: inherit;\r\n    font-weight: 700;\r\n    background: transparent;\r\n    color: $bodyText;\r\n    box-shadow: inset 0px 0px 0px 3px rgba($bodyText, 0.14);\r\n    cursor: pointer;\r\n}\r\n\r\n#grid {\r\n    box-shadow: 0 0 0 7px rgba($bodyText, 0.14);\r\n}\r\n\r\n#grid.no-guides {\r\n    .grid-cell:after {\r\n        border: none;\r\n    }\r\n    \r\n}\r\n\r\n#exportDrawing {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n    background: $bodyText;\r\n    color: $bodyBackground;\r\n}\r\n\r\n$track-color: rgba($bodyText, 0.21) !default;\r\n$thumb-color: $bodyBackground !default;\r\n\r\n$thumb-radius: 14px !default;\r\n$thumb-height: 28px !default;\r\n$thumb-width: 28px !default;\r\n$thumb-shadow-size: 7px !default;\r\n$thumb-shadow-blur: 7px !default;\r\n$thumb-shadow-color: rgba(0, 0, 0, .2) !default;\r\n$thumb-border-width: 2px !default;\r\n$thumb-border-color: $bodyText !default;\r\n\r\n$track-width: 100% !default;\r\n$track-height: 14px !default;\r\n$track-shadow-size: 2px !default;\r\n$track-shadow-blur: 2px !default;\r\n$track-shadow-color: rgba(0, 0, 0, .2) !default;\r\n$track-border-width: 2px !default;\r\n$track-border-color: rgba($bodyText, 0.21) !default;\r\n\r\n$track-radius: 5px !default;\r\n$contrast: 5% !default;\r\n\r\n$ie-bottom-track-color: darken($track-color, $contrast) !default;\r\n\r\n@mixin shadow($shadow-size, $shadow-blur, $shadow-color) {\r\n  box-shadow: $shadow-size $shadow-size $shadow-blur $shadow-color, 0 0 $shadow-size lighten($shadow-color, 5%);\r\n}\r\n\r\n@mixin track {\r\n  cursor: default;\r\n  height: $track-height;\r\n  transition: all .2s ease;\r\n  width: $track-width;\r\n}\r\n\r\n@mixin thumb {\r\n  @include shadow($thumb-shadow-size, $thumb-shadow-blur, $thumb-shadow-color);\r\n  background: $thumb-color;\r\n  border: $thumb-border-width solid $thumb-border-color;\r\n  border-radius: $thumb-radius;\r\n  box-sizing: border-box;\r\n  cursor: default;\r\n  height: $thumb-height;\r\n  width: $thumb-width;\r\n}\r\n\r\n[type='range'] {\r\n  -webkit-appearance: none;\r\n          appearance: none;\r\n  background: transparent;\r\n  margin: math.div($thumb-height, 2) 0;\r\n  width: $track-width;\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 0;\r\n\r\n    &::-webkit-slider-runnable-track {\r\n      background: lighten($track-color, $contrast);\r\n    }\r\n\r\n    &::-ms-fill-lower {\r\n      background: $track-color;\r\n    }\r\n\r\n    &::-ms-fill-upper {\r\n      background: lighten($track-color, $contrast);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    @include track;\r\n    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);\r\n    background: $track-color;\r\n    border: $track-border-width solid $track-border-color;\r\n    border-radius: $track-radius;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    @include thumb;\r\n    -webkit-appearance: none;\r\n    margin-top: (math.div((-$track-border-width * 2 + $track-height), 2) - math.div($thumb-height, 2));\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);\r\n    @include track;\r\n    background: $track-color;\r\n    border: $track-border-width solid $track-border-color;\r\n    border-radius: $track-radius;\r\n    height: math.div($track-height, 2);\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    @include thumb;\r\n  }\r\n\r\n  &::-ms-track {\r\n    @include track;\r\n    background: transparent;\r\n    border-color: transparent;\r\n    border-width: math.div($thumb-height, 2) 0;\r\n    color: transparent;\r\n  }\r\n\r\n  &::-ms-fill-lower {\r\n    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);\r\n    background: $ie-bottom-track-color;\r\n    border: $track-border-width solid $track-border-color;\r\n    border-radius: ($track-radius * 2);\r\n  }\r\n\r\n  &::-ms-fill-upper {\r\n    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);\r\n    background: $track-color;\r\n    border: $track-border-width solid $track-border-color;\r\n    border-radius: ($track-radius * 2);\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    @include thumb;\r\n    margin-top: math.div($track-height, 4);\r\n  }\r\n\r\n  &:disabled {\r\n    &::-webkit-slider-thumb,\r\n    &::-moz-range-thumb,\r\n    &::-ms-thumb,\r\n    &::-webkit-slider-runnable-track,\r\n    &::-ms-fill-lower,\r\n    &::-ms-fill-upper {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\n/* Hide scrollbar for IE, Edge and Firefox */\r\nbody,\r\nhtml {\r\n    -ms-overflow-style: none;\r\n    /* IE and Edge */\r\n    scrollbar-width: none;\r\n    /* Firefox */\r\n}\r\n\r\n\r\n.mobile-notice {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    z-index: 100000;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    height: 100dvh;\r\n    text-align: center;\r\n    background-color: rgba($bodyBackground, 0.56);\r\n    backdrop-filter: blur(7px);\r\n    font-size: 30px;\r\n    user-select: none;\r\n    display: none;\r\n    span {\r\n        max-width: 490px;\r\n    }\r\n\r\n    @media screen and (max-width: 1900px) {\r\n        // display: flex;\r\n    }\r\n}\r\n\r\n.mobile-options-title {\r\n    text-align: center;\r\n    padding: 20px 0;\r\n    position: sticky;\r\n    top: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 7px;\r\n    background: inherit;\r\n    grid-area: title;\r\n    z-index: 10;\r\n\r\n    &:after {\r\n        content: \"\";\r\n        position: relative;\r\n        width: 50px;\r\n        height: 3px;\r\n        border-radius: 10px;\r\n        background-color: #c7c7c7;\r\n    }\r\n\r\n\r\n\r\n    @include breakpoint(large) {\r\n        display: none;\r\n    }\r\n    \r\n}","*, *:before, *:after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul, ul li {\r\n  list-style: none;\r\n}\r\n\r\na {\r\n  color: inherit;\r\n  text-decoration-color: accent(0.65);\r\n}\r\n\r\n::selection {\r\n  background: accent(0.77);\r\n  color: $bodyBackground;\r\n}\r\n\r\nimg {\r\n    display: block;\r\n    max-width: 100%;\r\n}","@import url(\"https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100..900&display=swap\");\n*, *:before, *:after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul, ul li {\n  list-style: none;\n}\n\na {\n  color: inherit;\n  text-decoration-color: accent(0.65);\n}\n\n::selection {\n  background: accent(0.77);\n  color: #070707;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n}\n\nbody {\n  background: #141414;\n  color: #c7c7c7;\n  font-family: \"Roboto Slab\", serif;\n  height: 100vh;\n  height: 100dvh;\n}\n\ninput,\ntextarea,\nbutton,\nselect,\na {\n  -webkit-tap-highlight-color: transparent;\n}\n\n.game {\n  height: 100%;\n  display: flex;\n}\n@media screen and (max-width: 63.9375em) {\n  .game {\n    padding: 100px 10% 100px;\n  }\n}\n.game-title {\n  font-size: 49px;\n  margin-bottom: 42px;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-title {\n    font-size: 35px;\n    margin-bottom: 14px;\n  }\n}\n.game p {\n  margin-bottom: 50px;\n  font-size: 18px;\n  opacity: 0.63;\n}\n.game-sidebar {\n  overflow: auto;\n  z-index: 100;\n}\n@media print, screen and (min-width: 64em) {\n  .game-sidebar {\n    top: 0;\n    left: 0;\n    width: 490px;\n    padding: 50px;\n    height: 100%;\n    background: #070707;\n  }\n}\n@media screen and (max-width: 63.9375em) {\n  .game-sidebar {\n    position: unset;\n  }\n}\n@media screen and (max-width: 63.9375em) {\n  .game-sidebar .game-title-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background: #070707;\n    overflow: auto;\n    z-index: 100;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    height: auto;\n  }\n  .game-sidebar .game-title-container p {\n    margin: 0;\n    text-align: center;\n  }\n}\n.game-container {\n  position: relative;\n  height: 100%;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-container {\n    width: 100%;\n    margin: 50px auto;\n    max-width: 512px;\n  }\n}\n@media print, screen and (min-width: 64em) {\n  .game-container {\n    position: fixed;\n    width: calc(100% - 490px);\n    left: 490px;\n    padding: 100px 0;\n  }\n}\n.game-container .grid-outer {\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-container .grid-outer {\n    width: 100%;\n    height: 0;\n    padding-bottom: 100%;\n    overflow: hidden;\n  }\n}\n.game-container .grid-outer .grid-container {\n  width: 512px;\n  height: 512px;\n  display: flex;\n  flex-wrap: wrap;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-container .grid-outer .grid-container {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n.game-container .grid-outer .grid-container .grid-cell {\n  width: calc(100% / var(--cells));\n  height: calc(100% / var(--cells));\n  background-color: transparent;\n  overflow: hidden;\n  position: relative;\n}\n.game-container .grid-outer .grid-container .grid-cell:after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: 1px solid rgba(80, 80, 80, 0.2);\n}\n\n@media screen and (max-width: 63.9375em) {\n  .game-options {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    background: #070707;\n    transform: translateY(calc(100% - 80px));\n    transition: all 0.25s ease-out;\n    height: auto;\n    max-height: 70vh;\n    max-height: 70dvh;\n    overflow: hidden;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-areas: \"title title\" \"size background\" \"color color\";\n  }\n  .game-options.opened {\n    transform: translateY(0);\n    overflow: auto;\n  }\n}\n@media screen and (max-width: 47.9375em) {\n  .game-options {\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-areas: \"title\" \"size\" \"background\" \"color\";\n  }\n}\n.game-options .option-category-title {\n  margin-bottom: 20px;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-options [class*=game-options] {\n    padding: 20px 40px;\n  }\n}\n.game-options-grid-size {\n  margin-bottom: 49px;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-options-grid-size {\n    grid-area: size;\n  }\n}\n.game-options-grid-size label {\n  display: grid;\n  grid-template-columns: auto 100px;\n  grid-gap: 50px;\n}\n.game-options-background {\n  margin-bottom: 49px;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-options-background {\n    grid-area: background;\n  }\n}\n.game-options-background .background-list {\n  display: flex;\n  gap: 28px;\n}\n.game-options-background .background-list-item {\n  width: 70px;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-options-background .background-list-item button {\n  position: relative;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  box-shadow: 0px 0px 0px 2px rgba(199, 199, 199, 0.14);\n  cursor: pointer;\n  opacity: 0.35;\n}\n.game-options-background .background-list-item button.selected {\n  opacity: 1;\n  box-shadow: 0px 0px 0px 5px rgba(199, 199, 199, 0.21);\n}\n.game-options-background .background-list-item button span {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 100%);\n  color: #c7c7c7;\n  padding: 7px 0;\n  text-align: center;\n}\n.game-options-background .background-list-item button.white {\n  background: #fff;\n}\n.game-options-background .background-list-item button.black {\n  background: #000;\n}\n.game-options-background .background-list-item button.transparent {\n  background: transparent;\n  background-image: linear-gradient(90deg, rgba(199, 199, 199, 0.14) 49%, transparent 50%), linear-gradient(0deg, rgba(199, 199, 199, 0.14) 49%, transparent 50%);\n  background-size: 14px 14px;\n}\n.game-options-pencil-color {\n  margin-bottom: 49px;\n}\n@media screen and (max-width: 63.9375em) {\n  .game-options-pencil-color {\n    grid-area: color;\n  }\n}\n.game-options-pencil-color .color-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n.game-options-pencil-color .color-list-item {\n  width: 70px;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 10px;\n}\n.game-options-pencil-color .color-list-item button {\n  position: relative;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  box-shadow: 0px 0px 0px 2px rgba(199, 199, 199, 0.14);\n  cursor: pointer;\n  opacity: 0.35;\n}\n.game-options-pencil-color .color-list-item button.selected {\n  opacity: 1;\n  box-shadow: 0px 0px 0px 5px rgba(199, 199, 199, 0.21);\n}\n.game-options-pencil-color .color-list-item button.white {\n  background: #ffffff;\n}\n.game-options-pencil-color .color-list-item button.black {\n  background: #000000;\n}\n.game-options-pencil-color .color-list-item button.red {\n  background: #C62828;\n}\n.game-options-pencil-color .color-list-item button.orange {\n  background: #F57C00;\n}\n.game-options-pencil-color .color-list-item button.yellow {\n  background: #FDD835;\n}\n.game-options-pencil-color .color-list-item button.green {\n  background: #8BC34A;\n}\n.game-options-pencil-color .color-list-item button.blue {\n  background: #1976D2;\n}\n.game-options-pencil-color .color-list-item button.indigo {\n  background: #AB47BC;\n}\n.game-options-pencil-color .color-list-item button.violet {\n  background: #673AB7;\n}\n.game-options-pencil-color .color-list-item button.clear {\n  background: linear-gradient(90deg, rgba(199, 199, 199, 0.14) 49%, transparent 50%), linear-gradient(0deg, rgba(199, 199, 199, 0.14) 49%, transparent 50%);\n}\n.game-options-pencil-color .color-list-item button span {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 100%);\n  color: #c7c7c7;\n  padding: 7px 0;\n  text-align: center;\n}\n\n.actions {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 50px 0;\n}\n@media screen and (max-width: 63.9375em) {\n  .actions {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n    padding-bottom: 150px;\n  }\n}\n.actions .action-btn {\n  padding: 10px 25px;\n  margin: 0 10px;\n}\n@media screen and (max-width: 63.9375em) {\n  .actions .action-btn {\n    margin: 0;\n    padding: 10px 10px;\n  }\n}\n\n.action-btn {\n  border: none;\n  height: 42px;\n  border-radius: 8px;\n  font-family: inherit;\n  font-weight: 700;\n  background: transparent;\n  color: #c7c7c7;\n  box-shadow: inset 0px 0px 0px 3px rgba(199, 199, 199, 0.14);\n  cursor: pointer;\n}\n\n#grid {\n  box-shadow: 0 0 0 7px rgba(199, 199, 199, 0.14);\n}\n\n#grid.no-guides .grid-cell:after {\n  border: none;\n}\n\n#exportDrawing {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  background: #c7c7c7;\n  color: #070707;\n}\n\n[type=range] {\n  -webkit-appearance: none;\n  appearance: none;\n  background: transparent;\n  margin: 14px 0;\n  width: 100%;\n}\n[type=range]::-moz-focus-outer {\n  border: 0;\n}\n[type=range]:focus {\n  outline: 0;\n}\n[type=range]:focus::-webkit-slider-runnable-track {\n  background: rgba(212, 212, 212, 0.21);\n}\n[type=range]:focus::-ms-fill-lower {\n  background: rgba(199, 199, 199, 0.21);\n}\n[type=range]:focus::-ms-fill-upper {\n  background: rgba(212, 212, 212, 0.21);\n}\n[type=range]::-webkit-slider-runnable-track {\n  cursor: default;\n  height: 14px;\n  transition: all 0.2s ease;\n  width: 100%;\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2), 0 0 2px rgba(13, 13, 13, 0.2);\n  background: rgba(199, 199, 199, 0.21);\n  border: 2px solid rgba(199, 199, 199, 0.21);\n  border-radius: 5px;\n}\n[type=range]::-webkit-slider-thumb {\n  box-shadow: 7px 7px 7px rgba(0, 0, 0, 0.2), 0 0 7px rgba(13, 13, 13, 0.2);\n  background: #070707;\n  border: 2px solid #c7c7c7;\n  border-radius: 14px;\n  box-sizing: border-box;\n  cursor: default;\n  height: 28px;\n  width: 28px;\n  -webkit-appearance: none;\n  margin-top: -9px;\n}\n[type=range]::-moz-range-track {\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2), 0 0 2px rgba(13, 13, 13, 0.2);\n  cursor: default;\n  height: 14px;\n  transition: all 0.2s ease;\n  width: 100%;\n  background: rgba(199, 199, 199, 0.21);\n  border: 2px solid rgba(199, 199, 199, 0.21);\n  border-radius: 5px;\n  height: 7px;\n}\n[type=range]::-moz-range-thumb {\n  box-shadow: 7px 7px 7px rgba(0, 0, 0, 0.2), 0 0 7px rgba(13, 13, 13, 0.2);\n  background: #070707;\n  border: 2px solid #c7c7c7;\n  border-radius: 14px;\n  box-sizing: border-box;\n  cursor: default;\n  height: 28px;\n  width: 28px;\n}\n[type=range]::-ms-track {\n  cursor: default;\n  height: 14px;\n  transition: all 0.2s ease;\n  width: 100%;\n  background: transparent;\n  border-color: transparent;\n  border-width: 14px 0;\n  color: transparent;\n}\n[type=range]::-ms-fill-lower {\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2), 0 0 2px rgba(13, 13, 13, 0.2);\n  background: rgba(186, 186, 186, 0.21);\n  border: 2px solid rgba(199, 199, 199, 0.21);\n  border-radius: 10px;\n}\n[type=range]::-ms-fill-upper {\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2), 0 0 2px rgba(13, 13, 13, 0.2);\n  background: rgba(199, 199, 199, 0.21);\n  border: 2px solid rgba(199, 199, 199, 0.21);\n  border-radius: 10px;\n}\n[type=range]::-ms-thumb {\n  box-shadow: 7px 7px 7px rgba(0, 0, 0, 0.2), 0 0 7px rgba(13, 13, 13, 0.2);\n  background: #070707;\n  border: 2px solid #c7c7c7;\n  border-radius: 14px;\n  box-sizing: border-box;\n  cursor: default;\n  height: 28px;\n  width: 28px;\n  margin-top: 3.5px;\n}\n[type=range]:disabled::-webkit-slider-thumb, [type=range]:disabled::-moz-range-thumb, [type=range]:disabled::-ms-thumb, [type=range]:disabled::-webkit-slider-runnable-track, [type=range]:disabled::-ms-fill-lower, [type=range]:disabled::-ms-fill-upper {\n  cursor: not-allowed;\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n::-webkit-scrollbar {\n  display: none;\n}\n\n/* Hide scrollbar for IE, Edge and Firefox */\nbody,\nhtml {\n  -ms-overflow-style: none;\n  /* IE and Edge */\n  scrollbar-width: none;\n  /* Firefox */\n}\n\n.mobile-notice {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 100000;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  height: 100dvh;\n  text-align: center;\n  background-color: rgba(7, 7, 7, 0.56);\n  backdrop-filter: blur(7px);\n  font-size: 30px;\n  user-select: none;\n  display: none;\n}\n.mobile-notice span {\n  max-width: 490px;\n}\n.mobile-options-title {\n  text-align: center;\n  padding: 20px 0;\n  position: sticky;\n  top: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 7px;\n  background: inherit;\n  grid-area: title;\n  z-index: 10;\n}\n.mobile-options-title:after {\n  content: \"\";\n  position: relative;\n  width: 50px;\n  height: 3px;\n  border-radius: 10px;\n  background-color: #c7c7c7;\n}\n@media print, screen and (min-width: 64em) {\n  .mobile-options-title {\n    display: none;\n  }\n}","@use \"sass:math\";\r\n\r\n$bodyBackground: #070707;\r\n$bodyText: #c7c7c7;\r\n\r\n$gridBase: 7;\r\n\r\n$sectionTitleSize: 14 * $gridBase;\r\n$sectionTextSize: 5 * $gridBase;\r\n\r\n$navTrigSize: 56;\r\n\r\n$navSpanWidth: 28;\r\n$navSpanHeight: 2;\r\n\r\n\r\n// forms\r\n$input-border-color: rgba($bodyText, 0.35);\r\n\r\n$success: #3b9d5f;\r\n$error: #ef2626;","@use \"sass:math\";\r\n\r\n$global-font-size: 100% !default;\r\n\r\n@function strip-unit($num) {\r\n  @return math.div($num , ($num * 0 + 1));\r\n}\r\n\r\n@function rem-calc($values, $base: null) {\r\n  $rem-values: ();\r\n  $count: length($values);\r\n\r\n  @if $base == null {\r\n    $base: $global-font-size;\r\n  }\r\n\r\n  @if unit($base) == '%' {\r\n    $base: calc($base / 100%) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'rem' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if $count == 1 {\r\n    @return -zf-to-rem($values, $base);\r\n  }\r\n\r\n  @for $i from 1 through $count {\r\n    $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));\r\n  }\r\n\r\n  @return $rem-values;\r\n}\r\n\r\n@function -zf-bp-to-em($value) {\r\n  @if unit($value) == 'px' or unitless($value) {\r\n    $value: rem-calc($value, $base: 16px);\r\n  }\r\n\r\n  @return strip-unit($value) * 1em;\r\n}\r\n\r\n@function -zf-to-rem($value, $base: null) {\r\n  @if type-of($value) != 'number' {\r\n    @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';\r\n    @return $value;\r\n  }\r\n\r\n  @if unit($value) == 'em' {\r\n    $value: strip-unit($value) * 1rem;\r\n  }\r\n\r\n  @if unit($value) != 'rem' {\r\n    $value: math.div(strip-unit($value), strip-unit($base)) * 1rem;\r\n  }\r\n\r\n  @if $value == 0rem {\r\n    $value: 0;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n@function unitless-calc($value, $base: null) {\r\n\r\n  @if $base == null {\r\n    $base: $global-font-size;\r\n  }\r\n\r\n  @if unit($base) == '%' {\r\n    $base: ($base / 100%) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'rem' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'em' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if unit($value) == '%' {\r\n    $value: ($value / 100%) * $base;\r\n  }\r\n\r\n  @if unit($value) == 'rem' {\r\n    $value: strip-unit($value) * $base;\r\n  }\r\n\r\n  @if unit($value) == 'em' {\r\n    $value: strip-unit($value) * $base;\r\n  }\r\n\r\n  // 'px'\r\n  @if unit($value) == 'px' {\r\n    @return strip-unit($value) / strip-unit($base);\r\n  }\r\n\r\n  @if unitless($value) and ($value > 10) {\r\n    @return $value / strip-unit($base);\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n@function map-to-list($map, $keep: 'both') {\r\n  $keep: if(index('keys' 'values', $keep), $keep, 'both');\r\n\r\n  @if type-of($map) == 'map' {\r\n    $keys: ();\r\n    $values: ();\r\n\r\n    @each $key, $val in $map {\r\n      $keys: append($keys, $key);\r\n      $values: append($values, $val);\r\n    }\r\n\r\n    @if $keep == 'keys' {\r\n      @return $keys;\r\n    }\r\n    @else if $keep == 'values' {\r\n      @return $values;\r\n    }\r\n    @else {\r\n      @return zip($keys, $values);\r\n    }\r\n  }\r\n\r\n  @return if(type-of($map) != 'list', ($value,), $map);\r\n\r\n}\r\n$breakpoints: (\r\n  small: 0,\r\n  medium: 768px,\r\n  large: 1024px,\r\n  xlarge: 1200px,\r\n  xxlarge: 1400px,\r\n  xxxlarge: 1900px\r\n) !default;\r\n\r\n$print-breakpoint: large !default;\r\n\r\n$-zf-zero-breakpoint: small !default;\r\n\r\n$-zf-breakpoints-keys: map-to-list($breakpoints, 'keys');\r\n\r\n@if nth(map-values($breakpoints), 1) != 0 {\r\n  @error 'Your smallest breakpoint (defined in $breakpoints) must be set to \"0\".';\r\n}\r\n@else {\r\n  $-zf-zero-breakpoint: nth(map-keys($breakpoints), 1);\r\n}\r\n\r\n$breakpoint-classes: (small medium large xlarge xxlarge) !default;\r\n\r\n@function breakpoint($val: $-zf-zero-breakpoint) {\r\n  $bp: nth($val, 1);\r\n  $bp-max: 0;\r\n  $dir: if(length($val) > 1, nth($val, 2), up);\r\n  $str: '';\r\n  $named: false;\r\n\r\n  @if $bp == 'landscape' or $bp == 'portrait' {\r\n    @return '(orientation: #{$bp})';\r\n  }\r\n  @else if $bp == 'retina' {\r\n    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';\r\n  }\r\n  @if type-of($bp) == 'string' {\r\n    @if map-has-key($breakpoints, $bp) {\r\n      @if $dir == 'only' or $dir == 'down' {\r\n        $bp-max: -zf-map-next($breakpoints, $bp);\r\n      }\r\n\r\n      $bp: map-get($breakpoints, $bp);\r\n      $named: true;\r\n    }\r\n    @else {\r\n      $bp: 0;\r\n      @warn 'breakpoint(): \"#{$val}\" is not defined in your $breakpoints setting.';\r\n    }\r\n  }\r\n\r\n  $bp: -zf-bp-to-em($bp);\r\n  @if $bp-max {\r\n    $bp-max: -zf-bp-to-em($bp-max) - calc(1/16);\r\n  }\r\n  @if $bp > 0em or $dir == 'only' or $dir == 'down' {\r\n    @if $dir == 'only' {\r\n      @if $named == true {\r\n        @if $bp > 0em {\r\n          $str: $str + '(min-width: #{$bp})';\r\n\r\n          @if $bp-max != null {\r\n            $str: $str + ' and ';\r\n          }\r\n        }\r\n\r\n        @if $bp-max != null {\r\n          $str: $str + '(max-width: #{$bp-max})';\r\n        }\r\n      }\r\n      @else {\r\n        @warn 'breakpoint(): Only named media queries can have an `only` range.';\r\n      }\r\n    }\r\n\r\n    @else if $dir == 'down' {\r\n      $max: if($named, $bp-max, $bp);\r\n\r\n      @if $named or $bp > 0em {\r\n        @if $max != null {\r\n          $str: $str + '(max-width: #{$max})';\r\n        }\r\n      }\r\n    }\r\n\r\n    @else if $bp > 0em {\r\n      $str: $str + '(min-width: #{$bp})';\r\n    }\r\n  }\r\n\r\n  @return $str;\r\n}\r\n\r\n@mixin breakpoint($value) {\r\n  $str: breakpoint($value);\r\n  $bp: index($-zf-breakpoints-keys, $value);\r\n  $pbp: index($-zf-breakpoints-keys, $print-breakpoint);\r\n\r\n  $old-zf-size: null;\r\n\r\n  @if global-variable-exists(-zf-size) {\r\n    $old-zf-size: $-zf-size;\r\n  }\r\n  $-zf-size: nth($value, 1) !global; \r\n\r\n  @if $str == '' {\r\n    @content;\r\n  }\r\n\r\n  @else {\r\n    @if $bp != null and $bp <= $pbp {\r\n      @media print, screen and #{$str} {\r\n        @content;\r\n       }\r\n    }\r\n    @else {\r\n      @media screen and #{$str} {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $old-zf-size != null {\r\n    $-zf-size: $old-zf-size !global;\r\n  } @else {\r\n    $-zf-size: null !global;\r\n  }\r\n}\r\n\r\n\r\n\r\n@function -zf-map-next($map, $key) {\r\n\r\n  $values: map-keys($map);\r\n\r\n  $i: 0;\r\n\r\n  @if (map-has-key($map, $key)) {\r\n    $i: index($values, $key) + 1;\r\n  }\r\n\r\n  @if ($i > length($map) or $i == 0) {\r\n    @return null;\r\n  }\r\n  @else {\r\n    @return map-get($map, nth($values, $i));\r\n  }\r\n\r\n}\r\n\r\n@function -zf-breakpoints-less-than($key) {\r\n  $list: ();\r\n  $found_key: false;\r\n\r\n  @each $name in $-zf-breakpoints-keys {\r\n    @if ($name == $key) {\r\n      $found_key: true;\r\n    }\r\n    @if not $found_key {\r\n      $list: append($list, $name);\r\n    }\r\n  }\r\n  @return $list;\r\n}\r\n@function -zf-closest-named-breakpoint($breakpoint) {\r\n  $last: $-zf-zero-breakpoint;\r\n  $found: false;\r\n\r\n  $value: unitless-calc($breakpoint, 1px);\r\n  @each $key, $val in $breakpoints {\r\n    @if not $found {\r\n      @if unitless-calc($val) > $value {\r\n        $found: true;\r\n      } @else {\r\n        $last: $key;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $last;\r\n}\r\n\r\n@function -zf-get-bp-val($map, $value) {\r\n  @if type-of($map) == 'number' {\r\n    @return $map;\r\n  }\r\n  @if not map-has-key($breakpoints, $value) {\r\n    @if type-of($value) == 'number' {\r\n      $value: -zf-closest-named-breakpoint($value);\r\n    } @else {\r\n      @return null;\r\n    }\r\n  }\r\n  @else if map-has-key($map, $value) {\r\n    @return map-get($map, $value);\r\n  }\r\n  @else {\r\n    $anchor: null;\r\n    $found: false;\r\n\r\n    @each $key, $val in $breakpoints {\r\n      @if not $found {\r\n        @if map-has-key($map, $key) {\r\n          $anchor: $key;\r\n        }\r\n        @if $key == $value {\r\n          $found: true;\r\n        }\r\n      }\r\n    }\r\n\r\n    @return map-get($map, $anchor);\r\n  }\r\n}\r\n\r\n@if map-has-key($breakpoints, small) {\r\n  $small-up: screen;\r\n  $small-only: unquote('screen and #{breakpoint(small only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, medium) {\r\n  $medium-up: unquote('screen and #{breakpoint(medium)}');\r\n  $medium-only: unquote('screen and #{breakpoint(medium only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, large) {\r\n  $large-up: unquote('screen and #{breakpoint(large)}');\r\n  $large-only: unquote('screen and #{breakpoint(large only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, xlarge) {\r\n  $xlarge-up: unquote('screen and #{breakpoint(xlarge)}');\r\n  $xlarge-only: unquote('screen and #{breakpoint(xlarge only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, xxlarge) {\r\n  $xxlarge-up: unquote('screen and #{breakpoint(xxlarge)}');\r\n}\r\n"]}