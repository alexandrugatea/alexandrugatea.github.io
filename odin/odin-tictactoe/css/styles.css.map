{"version":3,"sources":["../src/scss/base/_var.scss","odin-tictactoe/css/scss/styles.css","../src/scss/base/_reset.scss","../src/scss/base/_font.scss","../src/scss/base/_scroll.scss","odin-tictactoe/css/scss/styles.scss","../src/scss/base/_foundationMQ.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@use \"sass:math\";\r\n\r\n:root {\r\n    --accent: #ff4200; //#b4997f; Previous\r\n    --accent-r: 255;\r\n    --accent-g: 66;\r\n    --accent-b: 0;\r\n    --radius: 0.4375rem;\r\n    --radius-circle: 10rem;\r\n}\r\n\r\n$bodyBackground: #070707;\r\n$bodyText: #c7c7c7;\r\n\r\n$gridBase: 7;\r\n\r\n$sectionTitleSize: 14 * $gridBase;\r\n$sectionTextSize: 5 * $gridBase;\r\n\r\n$navTrigSize: 56;\r\n\r\n$navSpanWidth: 28;\r\n$navSpanHeight: 2;\r\n\r\n\r\n// forms\r\n$input-border-color: rgba($bodyText, 0.35);\r\n\r\n$success: #3b9d5f;\r\n$error: #ef2626;",":root {\n  --accent: #ff4200;\n  --accent-r: 255;\n  --accent-g: 66;\n  --accent-b: 0;\n  --radius: 0.4375rem;\n  --radius-circle: 10rem;\n}\n\n*, *:before, *:after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul, ul li {\n  list-style: none;\n}\n\na {\n  color: inherit;\n  text-decoration-color: rgba(var(--accent-r), var(--accent-g), var(--accent-b), 0.65);\n}\n\n::selection {\n  background: rgba(var(--accent-r), var(--accent-g), var(--accent-b), 0.77);\n  color: #070707;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n}\n\n@font-face {\n  font-family: \"PS100\";\n  src: url(\"../../../build/fonts/ProductSans-Thin.ttf\") format(\"truetype\");\n  font-weight: 100;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS300\";\n  src: url(\"../../../build/fonts/ProductSans-Light.ttf\") format(\"truetype\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS400\";\n  src: url(\"../../../build/fonts/ProductSans-Regular.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS500\";\n  src: url(\"../../../build/fonts/ProductSans-Medium.ttf\") format(\"truetype\");\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS700\";\n  src: url(\"../../../build/fonts/ProductSans-Bold.ttf\") format(\"truetype\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS900\";\n  src: url(\"../../../build/fonts/ProductSans-Black.ttf\") format(\"truetype\");\n  font-weight: 900;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS100i\";\n  src: url(\"../../../build/fonts/ProductSans-ThinItalic.ttf\") format(\"truetype\");\n  font-weight: 100;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS300i\";\n  src: url(\"../../../build/fonts/ProductSans-LightItalic.ttf\") format(\"truetype\");\n  font-weight: 300;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS400i\";\n  src: url(\"../../../build/fonts/ProductSans-Italic.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS500i\";\n  src: url(\"../../../build/fonts/ProductSans-MediumItalic.ttf\") format(\"truetype\");\n  font-weight: 500;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS700i\";\n  src: url(\"../../../build/fonts/ProductSans-BoldItalic.ttf\") format(\"truetype\");\n  font-weight: 700;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"PS900i\";\n  src: url(\"../../../build/fonts/ProductSans-BlackItalic.ttf\") format(\"truetype\");\n  font-weight: 900;\n  font-style: italic;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Slab\";\n  src: url(\"../../../build/fonts/JosefinSlab-SemiBold.ttf\") format(\"truetype\");\n  font-weight: 600;\n  font-style: normal;\n  font-display: swap;\n}\n/* fallback */\n@font-face {\n  font-family: \"Material Symbols Outlined\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/materialsymbolsoutlined/v166/kJF1BvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oDMzByHX9rA6RzaxHMPdY43zj-jCxv3fzvRNU22ZXGJpEpjC_1v-p_4MrImHCIJIZrDCvHOej.woff2) format(\"woff2\");\n}\n.material-symbols-outlined {\n  font-variation-settings: \"FILL\" 0, \"wght\" 400, \"GRAD\" 0, \"opsz\" 24;\n  font-family: \"Material Symbols Outlined\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  font-feature-settings: \"liga\";\n  -webkit-font-feature-settings: \"liga\";\n  -webkit-font-smoothing: antialiased;\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n*:not(pre)::-webkit-scrollbar {\n  display: none;\n}\n\n/* Hide scrollbar for IE, Edge and Firefox */\nbody, html {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n\n#CybotCookiebotDialog::-webkit-scrollbar,\n#CybotCookiebotDialog *::-webkit-scrollbar {\n  display: block;\n}\n\n#CybotCookiebotDialog, #CybotCookiebotDialog * {\n  -ms-overflow-style: auto;\n  scrollbar-width: auto;\n}\n\n@font-face {\n  font-family: \"Valhalla\";\n  src: url(\"../../common-res/fonts/Norse-Bold.otf\") format(\"truetype\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}\nbody {\n  background: #0f0f0f;\n  color: #c7c7c7;\n  display: flex;\n  height: 100vh;\n  height: 100dvh;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Valhalla\";\n}\n\n#game {\n  text-align: center;\n}\n#game .game-title {\n  font-family: \"Valhalla\";\n  text-align: center;\n}\n#game .game-description {\n  margin: 2.1875rem 0;\n  font-family: \"Slab\";\n}\n@media screen and (max-width: 47.9375em) {\n  #game .game-description {\n    margin: 1.3125rem 0;\n  }\n}\n#game .game-message {\n  height: 3.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.3125rem;\n  font-family: \"Slab\";\n}\n#game .game-message span {\n  color: #3b9d5f;\n  display: block;\n  padding: 0 0.4375rem;\n}\n#game .game-score {\n  display: flex;\n  margin-bottom: 0.875rem;\n  justify-content: center;\n  align-items: center;\n}\n#game .game-score .vs {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.875rem 2.1875rem;\n  font-size: 2.1875rem;\n  font-style: italic;\n}\n#game .game-score .score-group {\n  font-size: 1.3125rem;\n  text-align: center;\n}\n#game .game-score .score-group.winner {\n  color: #3b9d5f;\n}\n#game .game-score .score-group.looser {\n  opacity: 0.5;\n}\n#game .game-score .score-group span {\n  font-size: 2.1875rem;\n  display: block;\n  margin-top: 0.875rem;\n}\n@media screen and (max-width: 47.9375em) {\n  #game .game-score .score-group span {\n    font-size: 1.3125rem;\n  }\n}\n#game .game-restart-button, #game .game-change-button {\n  padding: 0.875rem 1.3125rem;\n  border: none;\n  background: #141414;\n  color: #ef2626;\n  font-family: \"Valhalla\";\n  font-size: 1.3125rem;\n  letter-spacing: 0.0625rem;\n  cursor: pointer;\n  max-width: min-content;\n  margin: auto;\n  white-space: nowrap;\n}\n#game .game-change-button {\n  background: transparent;\n}\n#game .game-oponents {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(7, 7, 7, 0.2);\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(7px);\n  opacity: 1;\n  pointer-events: all;\n  transform: scale(1);\n  transition: all 0.15s cubic-bezier(0.175, 0.885, 0.32, 1.25);\n}\n#game .game-oponents.game-active {\n  opacity: 0;\n  pointer-events: none;\n  transform: scale(0);\n}\n#game .game-oponents-container {\n  padding: 3.5rem;\n  background: rgba(7, 7, 7, 0.5);\n  backdrop-filter: blur(14px);\n  display: grid;\n  grid-template-columns: auto 0.875rem auto;\n  width: 90%;\n  max-width: 43.75rem;\n  gap: 0.4375rem;\n}\n#game .game-oponents-title {\n  grid-column-start: 1;\n  grid-column-end: 4;\n  margin-bottom: 2.1875rem;\n}\n#game .game-oponents .game-divider {\n  width: 0;\n  height: 100%;\n  box-shadow: 0 0 0 0.0625rem rgba(199, 199, 199, 0.14);\n  margin: 0 auto;\n}\n@media screen and (max-width: 47.9375em) {\n  #game .game-oponents .game-divider {\n    display: none;\n  }\n}\n#game .game-oponents .game-oponent {\n  display: flex;\n  flex-direction: column;\n  gap: 1.3125rem;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n}\n@media screen and (max-width: 47.9375em) {\n  #game .game-oponents .game-oponent {\n    grid-column-start: 1;\n    grid-column-end: 4;\n    margin-bottom: 1.3125rem;\n  }\n}\n#game .game-oponents .game-oponent .game-players {\n  display: flex;\n  gap: 0.875rem;\n}\n#game .game-oponents .game-oponent .vs {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  line-height: 2.625rem;\n}\n#game .game-oponents .game-oponent label {\n  font-family: \"Slab\";\n  font-size: 0.875rem;\n  margin-bottom: 0.875rem;\n  display: block;\n}\n#game .game-oponents .game-oponent input {\n  width: 100%;\n  height: 2.625rem;\n  background: #191919;\n  box-shadow: inset 0.1875rem 0.25rem 0.125rem 0.0625rem rgba(7, 7, 7, 0.5), 0 0 0 0 rgba(var(--accent-r), var(--accent-g), var(--accent-b), 0);\n  border: none;\n  text-align: center;\n  padding: 0.4375rem;\n  color: #c7c7c7;\n  font-family: \"Slab\";\n  font-size: 1.125rem;\n  outline: none;\n  border-radius: 0.5rem;\n  transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.25);\n}\n#game .game-oponents .game-oponent input:active, #game .game-oponents .game-oponent input:focus {\n  box-shadow: inset 0.1875rem 0.25rem 0.125rem 0.0625rem rgba(7, 7, 7, 0.5), 0 0 0 0.1875rem rgba(var(--accent-r), var(--accent-g), var(--accent-b), 0.35);\n}\n#game .game-oponents .game-oponent-button {\n  background: rgba(var(--accent-r), var(--accent-g), var(--accent-b), 1);\n  color: #070707;\n  font-size: 0.875rem;\n  padding: 0.875rem 1.3125rem;\n  border: none;\n  cursor: pointer;\n  border-radius: 0.5rem;\n  font-size: 1.125rem;\n  font-family: \"PS700\";\n}\n#game .game-oponents .game-oponent-button:active, #game .game-oponents .game-oponent-button:focus {\n  box-shadow: 0 0 0 0.1875rem rgba(var(--accent-r), var(--accent-g), var(--accent-b), 0.35);\n}\n\n#board {\n  width: 22.75rem;\n  height: 22.75rem;\n  position: relative;\n  margin-bottom: 3.5rem;\n}\n@media screen and (max-width: 47.9375em) {\n  #board {\n    margin-bottom: 2.1875rem;\n  }\n}\n#board.game-ended {\n  pointer-events: none;\n}\n#board.game-tie {\n  opacity: 0.5;\n}\n#board .cell {\n  width: 7rem;\n  height: 7rem;\n  background: #212121;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -3.5rem;\n  margin-top: -3.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 4.8125rem;\n  transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.25);\n  user-select: none;\n  border-radius: 0.25rem;\n  cursor: pointer;\n}\n#board .cell:before {\n  content: attr(data-cell);\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-family: \"Slab\";\n  font-size: 0.875rem;\n  padding: 0.4375rem;\n  opacity: 0.28;\n}\n#board .cell.marked {\n  pointer-events: none;\n}\n#board .cell.winner {\n  background: #3b9d5f;\n  color: #c7c7c7;\n  border-radius: 0;\n}\n#board .cell[class*=mark]:after {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 4.8125rem;\n  opacity: 0.28;\n}\n#board .cell[class*=mark].mark-X:after {\n  content: \"X\";\n}\n#board .cell[class*=mark].mark-0:after {\n  content: \"0\";\n}\n#board:not(.will-clear) .cell-1-1 {\n  transform: translate(calc(-100% - 14px), calc(-100% - 14px));\n}\n#board:not(.will-clear) .cell-1-2 {\n  transform: translate(0%, calc(-100% - 14px));\n}\n#board:not(.will-clear) .cell-1-3 {\n  transform: translate(calc(100% + 14px), calc(-100% - 14px));\n}\n#board:not(.will-clear) .cell-2-1 {\n  transform: translate(calc(-100% - 14px), 0%);\n}\n#board:not(.will-clear) .cell-2-3 {\n  transform: translate(calc(100% + 14px), 0%);\n}\n#board:not(.will-clear) .cell-3-1 {\n  transform: translate(calc(-100% - 14px), calc(100% + 14px));\n}\n#board:not(.will-clear) .cell-3-2 {\n  transform: translate(0%, calc(100% + 14px));\n}\n#board:not(.will-clear) .cell-3-3 {\n  transform: translate(calc(100% + 14px), calc(100% + 14px));\n}\n\n.cell:nth-child(1) {\n  transition-delay: 0.03s !important;\n}\n\n.cell:nth-child(2) {\n  transition-delay: 0.06s !important;\n}\n\n.cell:nth-child(3) {\n  transition-delay: 0.09s !important;\n}\n\n.cell:nth-child(4) {\n  transition-delay: 0.12s !important;\n}\n\n.cell:nth-child(5) {\n  transition-delay: 0.15s !important;\n}\n\n.cell:nth-child(6) {\n  transition-delay: 0.18s !important;\n}\n\n.cell:nth-child(7) {\n  transition-delay: 0.21s !important;\n}\n\n.cell:nth-child(8) {\n  transition-delay: 0.24s !important;\n}\n\n.cell:nth-child(9) {\n  transition-delay: 0.27s !important;\n}\n\n#playAgainstHuman.game-oponent-button {\n  background: #3b9d5f !important;\n}","*, *:before, *:after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul, ul li {\r\n  list-style: none;\r\n}\r\n\r\na {\r\n  color: inherit;\r\n  text-decoration-color: accent(0.65);\r\n}\r\n\r\n::selection {\r\n  background: accent(0.77);\r\n  color: $bodyBackground;\r\n}\r\n\r\nimg {\r\n    display: block;\r\n    max-width: 100%;\r\n}","$customFontPath: \"../fonts/\"!default;\r\n//FONT-STYLE: Normal\r\n\r\n$font100: 'PS100';\r\n$font300: 'PS300';\r\n$font400: 'PS400';\r\n$font500: 'PS500';\r\n$font700: 'PS700';\r\n$font900: 'PS900';\r\n\r\n$font100i: 'PS100i';\r\n$font300i: 'PS300i';\r\n$font400i: 'PS400i';\r\n$font500i: 'PS500i';\r\n$font700i: 'PS700i';\r\n$font900i: 'PS900i';\r\n\r\n$fontSlab: 'Slab';\r\n\r\n\r\n@font-face {\r\n    font-family: 'PS100';\r\n    src: url('#{$customFontPath}ProductSans-Thin.ttf') format('truetype');\r\n    font-weight: 100;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS300';\r\n    src: url('#{$customFontPath}ProductSans-Light.ttf') format('truetype');\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS400';\r\n    src: url('#{$customFontPath}ProductSans-Regular.ttf') format('truetype');\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS500';\r\n    src: url('#{$customFontPath}ProductSans-Medium.ttf') format('truetype');\r\n    font-weight: 500;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS700';\r\n    src: url('#{$customFontPath}ProductSans-Bold.ttf') format('truetype');\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS900';\r\n    src: url('#{$customFontPath}ProductSans-Black.ttf') format('truetype');\r\n    font-weight: 900;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n//FONT-STYLE: Italic\r\n\r\n@font-face {\r\n    font-family: 'PS100i';\r\n    src: url('#{$customFontPath}ProductSans-ThinItalic.ttf') format('truetype');\r\n    font-weight: 100;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS300i';\r\n    src: url('#{$customFontPath}ProductSans-LightItalic.ttf') format('truetype');\r\n    font-weight: 300;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS400i';\r\n    src: url('#{$customFontPath}ProductSans-Italic.ttf') format('truetype');\r\n    font-weight: 400;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS500i';\r\n    src: url('#{$customFontPath}ProductSans-MediumItalic.ttf') format('truetype');\r\n    font-weight: 500;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS700i';\r\n    src: url('#{$customFontPath}ProductSans-BoldItalic.ttf') format('truetype');\r\n    font-weight: 700;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'PS900i';\r\n    src: url('#{$customFontPath}ProductSans-BlackItalic.ttf') format('truetype');\r\n    font-weight: 900;\r\n    font-style: italic;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Slab';\r\n    src: url('#{$customFontPath}JosefinSlab-SemiBold.ttf') format('truetype');\r\n    font-weight: 600;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n//.slab {\r\n//    font-family: $fontSlab;\r\n//    font-optical-sizing: auto;\r\n//    font-weight: 700;\r\n//    font-style: normal;\r\n//}\r\n\r\n/* fallback */\r\n@font-face {\r\n    font-family: 'Material Symbols Outlined';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    src: url(https://fonts.gstatic.com/s/materialsymbolsoutlined/v166/kJF1BvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oDMzByHX9rA6RzaxHMPdY43zj-jCxv3fzvRNU22ZXGJpEpjC_1v-p_4MrImHCIJIZrDCvHOej.woff2) format('woff2');\r\n}\r\n\r\n.material-symbols-outlined {\r\n    font-variation-settings:\r\n        'FILL' 0,\r\n        'wght' 400,\r\n        'GRAD' 0,\r\n        'opsz' 24 ;\r\n    font-family: 'Material Symbols Outlined';\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-size: 24px;\r\n    line-height: 1;\r\n    letter-spacing: normal;\r\n    text-transform: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    word-wrap: normal;\r\n    direction: ltr;\r\n    font-feature-settings: 'liga';\r\n    -webkit-font-feature-settings: 'liga';\r\n    -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n\r\n@mixin font($min-font-size: 12, $max-font-size: 21, $line-height: 1.7, $font-weight: 400, $font-style: normal, $lower-range: 320px, $upper-range: 1400px, $font-family: $base-font) {\r\n\r\n    font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size) - strip-unit($min-font-size)} * (100vw - #{$lower-range}) / #{strip-unit($upper-range) - strip-unit($lower-range)});\r\n\r\n    $lh: calc($line-height / $max-font-size);\r\n    $lhv: decimal-round($lh, 3, round);\r\n\r\n    line-height: $line-height;\r\n    font-family: $font-family;\r\n    font-weight: $font-weight;\r\n    font-style: $font-style; \r\n\r\n    @media screen and (max-width: $lower-range) {\r\n        font-size: rem-calc($min-font-size);\r\n    }\r\n\r\n    @media screen and (min-width: $upper-range) {\r\n        font-size: rem-calc($max-font-size);\r\n    }\r\n}","/* Hide scrollbar for Chrome, Safari and Opera */\r\n*:not(pre)::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n/* Hide scrollbar for IE, Edge and Firefox */\r\nbody, html {\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n\r\n\r\n#CybotCookiebotDialog::-webkit-scrollbar, \r\n#CybotCookiebotDialog *::-webkit-scrollbar {\r\n  display: block; \r\n}\r\n\r\n#CybotCookiebotDialog, #CybotCookiebotDialog * {\r\n  -ms-overflow-style: auto; \r\n  scrollbar-width: auto; \r\n}","$customFontPath: \"../../../build/fonts/\";\r\n@import \"../../../../src/scss/base/foundationMQ.scss\";\r\n@import \"../../../../src/scss/base/var\";\r\n@import \"../../../../src/scss/base/mixins\";\r\n@import \"../../../../src/scss/base/reset\";\r\n@import \"../../../../src/scss/base/font\";\r\n@import \"../../../../src/scss/base/scroll\";\r\n\r\n@font-face {\r\n    font-family: 'Valhalla';\r\n    src: url('../../common-res/fonts/Norse-Bold.otf') format('truetype');\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n$bezier: cubic-bezier(0.175, 0.885, 0.32, 1.25);\r\n\r\nbody {\r\n    background: lighten($bodyBackground, 3%);\r\n    color: $bodyText;\r\n    display: flex;\r\n    height: 100vh;\r\n    height: 100dvh;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: \"Valhalla\"\r\n}\r\n\r\n#game {\r\n    text-align: center;\r\n\r\n    .game-title {\r\n        font-family: \"Valhalla\";\r\n        text-align: center;\r\n    }\r\n\r\n    .game-description {\r\n        margin: rem-calc(35 0);\r\n        font-family: \"Slab\";\r\n\r\n        @include breakpoint(small only) {\r\n        // < 768\r\n        margin: rem-calc(21 0);\r\n            \r\n        }\r\n    }\r\n\r\n    .game-message {\r\n        height: rem-calc(56);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: rem-calc(21);\r\n        font-family: \"Slab\";\r\n\r\n        span {\r\n            color: $success;\r\n            display: block;\r\n            padding: rem-calc(0 7);\r\n        }\r\n    }\r\n    \r\n    \r\n    .game-score {\r\n        display: flex;\r\n        margin-bottom: rem-calc(14);\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        .vs {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            padding: rem-calc(14 35);\r\n            font-size: rem-calc(35);\r\n            font-style: italic;\r\n        }\r\n\r\n        .score-group {\r\n            font-size: rem-calc(21);\r\n            text-align: center;\r\n\r\n            &.winner {\r\n                color: $success;\r\n            }\r\n\r\n            &.looser {\r\n                opacity: 0.5;\r\n            }\r\n            \r\n            span {\r\n                font-size: rem-calc(35);\r\n                display: block;\r\n                margin-top: rem-calc(14);\r\n\r\n                @include breakpoint(small only) {\r\n                // < 768\r\n                font-size: rem-calc(21);\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .game-restart-button, .game-change-button {\r\n        padding: rem-calc(14 21);\r\n        border: none;\r\n        background: lighten($bodyBackground, 5%);\r\n        color: $error;\r\n        font-family: \"Valhalla\";\r\n        font-size: rem-calc(21);\r\n        letter-spacing: rem-calc(1);\r\n        cursor: pointer;\r\n        // display: block;\r\n        max-width: min-content;\r\n        margin: auto;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .game-change-button {\r\n        background: transparent;\r\n    }\r\n\r\n    .game-oponents {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background: rgba($bodyBackground, 0.2);\r\n        z-index: 100;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        backdrop-filter: blur(7px);\r\n        opacity: 1;\r\n        pointer-events: all;\r\n        transform: scale(1);\r\n        transition: all 0.15s $bezier;\r\n\r\n        &.game-active {\r\n            opacity: 0;\r\n            pointer-events: none;\r\n            transform: scale(0);\r\n        }\r\n        \r\n        &-container {\r\n            padding: rem-calc(56);\r\n            background: rgba($bodyBackground, 0.5);\r\n            backdrop-filter: blur(14px);\r\n            display: grid;\r\n            grid-template-columns: auto rem-calc(14) auto;\r\n            width: 90%;\r\n            max-width: rem-calc(700);\r\n            gap: rem-calc(7);\r\n        }\r\n\r\n        &-title {\r\n            grid-column-start: 1;\r\n            grid-column-end: 4;\r\n            margin-bottom: rem-calc(35);\r\n        }\r\n\r\n        .game-divider {\r\n            width: 0;\r\n            height: 100%;\r\n            box-shadow: rem-calc(0 0 0 1) rgba($bodyText, 0.14);\r\n            margin: 0 auto;\r\n\r\n            @include breakpoint(small only) {\r\n            // < 768\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .game-oponent {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: rem-calc(21);\r\n            width: 100%;\r\n            justify-content: center;\r\n            align-items: center;\r\n\r\n            @include breakpoint(small only) {\r\n            // < 768\r\n                grid-column-start: 1;\r\n                grid-column-end: 4;\r\n                margin-bottom: rem-calc(21);\r\n            }\r\n\r\n            .game-players {\r\n                display: flex;\r\n                gap: rem-calc(14);\r\n            }\r\n\r\n            .vs {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: flex-end;\r\n                line-height: rem-calc(42);\r\n            }\r\n\r\n            label {\r\n                font-family: \"Slab\";\r\n                font-size: rem-calc(14);\r\n                margin-bottom: rem-calc(14);\r\n                display: block;\r\n            }\r\n\r\n            input {\r\n                width: 100%;\r\n                height: rem-calc(42);\r\n                background: lighten($bodyBackground, 7%);\r\n                box-shadow: \r\n                    inset rem-calc(3 4 2 1) rgba($bodyBackground, 0.5),\r\n                    rem-calc(0 0 0 0) accent(0);\r\n                border: none;\r\n                text-align: center;\r\n                padding: rem-calc(7);\r\n                color: $bodyText;\r\n                font-family: \"Slab\";\r\n                font-size: rem-calc(18);\r\n                outline: none;\r\n                border-radius: rem-calc(8);\r\n                transition: all 0.25s $bezier;\r\n                \r\n                &:active, &:focus {\r\n                    box-shadow: \r\n                        inset rem-calc(3 4 2 1) rgba($bodyBackground, 0.5),\r\n                        rem-calc(0 0 0 3) accent(0.35);\r\n                }   \r\n            }\r\n\r\n            &-button {\r\n                background: accent(1);\r\n                color: $bodyBackground;\r\n                font-size: rem-calc(14);\r\n                padding: rem-calc(14 21);\r\n                border: none;\r\n                cursor: pointer;\r\n                border-radius: rem-calc(8);\r\n                font-size: rem-calc(18);\r\n                font-family: \"PS700\";\r\n\r\n                &:active, &:focus {\r\n                    box-shadow: rem-calc(0 0 0 3) accent(0.35);\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$cellSize: 112px;\r\n$cellGap: 14px;\r\n\r\n#board {\r\n    width: rem-calc($cellSize * 3) + rem-calc($cellGap * 2);\r\n    height: rem-calc($cellSize * 3) + rem-calc($cellGap * 2);\r\n    position: relative;\r\n    margin-bottom: rem-calc(56);\r\n\r\n    \r\n\r\n    @include breakpoint(small only) {\r\n    // < 768\r\n        margin-bottom: rem-calc(35);\r\n    }\r\n    &.game-ended {\r\n        pointer-events: none;\r\n    }\r\n\r\n    &.game-tie {\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .cell {\r\n        width: rem-calc($cellSize);\r\n        height: rem-calc($cellSize);\r\n        background: lighten($bodyBackground, 10%);\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-left: rem-calc(-$cellSize * 0.5);\r\n        margin-top: rem-calc(-$cellSize * 0.5);\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        font-size: rem-calc(77);\r\n\r\n        transition: all 0.25s $bezier;\r\n        user-select: none;\r\n        border-radius: rem-calc(4);\r\n        cursor: pointer;\r\n\r\n\r\n        &:before {\r\n            content: attr(data-cell);\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            font-family: \"Slab\";\r\n            font-size: rem-calc(14);\r\n            padding: rem-calc(7);\r\n            opacity: 0.28;\r\n        }\r\n\r\n        &.marked {\r\n            pointer-events: none;\r\n        }\r\n\r\n        &.winner {\r\n            background: $success;\r\n            color: $bodyText;\r\n            border-radius: 0;\r\n        }\r\n\r\n        &[class*='mark'] {\r\n\r\n            &:after {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                font-size: rem-calc(77);\r\n                opacity: 0.28;\r\n            }\r\n            \r\n            &.mark-X:after {\r\n                content: \"X\";\r\n            }\r\n\r\n            &.mark-0:after {\r\n                content: \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    &:not(.will-clear) {\r\n        .cell-1-1 {\r\n            transform: translate(\r\n                calc(-100% - $cellGap), \r\n                calc(-100% - $cellGap))\r\n        }\r\n    \r\n        .cell-1-2 {\r\n            transform: translate(\r\n                calc(0%), \r\n                calc(-100% - $cellGap))\r\n        }\r\n    \r\n        .cell-1-3 {\r\n            transform: translate(\r\n                calc(100% + $cellGap), \r\n                calc(-100% - $cellGap))\r\n        }\r\n    \r\n        .cell-2-1 {\r\n            transform: translate(\r\n                calc(-100% - $cellGap), \r\n                calc(0%))\r\n        }\r\n        .cell-2-3 {\r\n            transform: translate(\r\n                calc(100% + $cellGap), \r\n                calc(0%))\r\n        }\r\n    \r\n        .cell-3-1 {\r\n            transform: translate(\r\n                calc(-100% - $cellGap), \r\n                calc(100% + $cellGap))\r\n        }\r\n    \r\n        .cell-3-2 {\r\n            transform: translate(\r\n                calc(0%), \r\n                calc(100% + $cellGap))\r\n        }\r\n    \r\n        .cell-3-3 {\r\n            transform: translate(\r\n                calc(100% + $cellGap), \r\n                calc(100% + $cellGap))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@for $i from 1 through 9 {\r\n    $delay: 0.03;\r\n\r\n    .cell:nth-child(#{$i}) {\r\n        transition-delay: #{$delay * $i}s!important;\r\n    }\r\n}\r\n\r\n\r\n#playAgainstHuman.game-oponent-button {\r\n    background: $success!important;\r\n}","@use \"sass:math\";\r\n\r\n$global-font-size: 100% !default;\r\n\r\n@function strip-unit($num) {\r\n  @return math.div($num , ($num * 0 + 1));\r\n}\r\n\r\n@function rem-calc($values, $base: null) {\r\n  $rem-values: ();\r\n  $count: length($values);\r\n\r\n  @if $base == null {\r\n    $base: $global-font-size;\r\n  }\r\n\r\n  @if unit($base) == '%' {\r\n    $base: calc($base / 100%) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'rem' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if $count == 1 {\r\n    @return -zf-to-rem($values, $base);\r\n  }\r\n\r\n  @for $i from 1 through $count {\r\n    $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));\r\n  }\r\n\r\n  @return $rem-values;\r\n}\r\n\r\n@function -zf-bp-to-em($value) {\r\n  @if unit($value) == 'px' or unitless($value) {\r\n    $value: rem-calc($value, $base: 16px);\r\n  }\r\n\r\n  @return strip-unit($value) * 1em;\r\n}\r\n\r\n@function -zf-to-rem($value, $base: null) {\r\n  @if type-of($value) != 'number' {\r\n    @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';\r\n    @return $value;\r\n  }\r\n\r\n  @if unit($value) == 'em' {\r\n    $value: strip-unit($value) * 1rem;\r\n  }\r\n\r\n  @if unit($value) != 'rem' {\r\n    $value: math.div(strip-unit($value), strip-unit($base)) * 1rem;\r\n  }\r\n\r\n  @if $value == 0rem {\r\n    $value: 0;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n@function unitless-calc($value, $base: null) {\r\n\r\n  @if $base == null {\r\n    $base: $global-font-size;\r\n  }\r\n\r\n  @if unit($base) == '%' {\r\n    $base: ($base / 100%) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'rem' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if unit($base) == 'em' {\r\n    $base: strip-unit($base) * 16px;\r\n  }\r\n\r\n  @if unit($value) == '%' {\r\n    $value: ($value / 100%) * $base;\r\n  }\r\n\r\n  @if unit($value) == 'rem' {\r\n    $value: strip-unit($value) * $base;\r\n  }\r\n\r\n  @if unit($value) == 'em' {\r\n    $value: strip-unit($value) * $base;\r\n  }\r\n\r\n  // 'px'\r\n  @if unit($value) == 'px' {\r\n    @return strip-unit($value) / strip-unit($base);\r\n  }\r\n\r\n  @if unitless($value) and ($value > 10) {\r\n    @return $value / strip-unit($base);\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n@function map-to-list($map, $keep: 'both') {\r\n  $keep: if(index('keys' 'values', $keep), $keep, 'both');\r\n\r\n  @if type-of($map) == 'map' {\r\n    $keys: ();\r\n    $values: ();\r\n\r\n    @each $key, $val in $map {\r\n      $keys: append($keys, $key);\r\n      $values: append($values, $val);\r\n    }\r\n\r\n    @if $keep == 'keys' {\r\n      @return $keys;\r\n    }\r\n    @else if $keep == 'values' {\r\n      @return $values;\r\n    }\r\n    @else {\r\n      @return zip($keys, $values);\r\n    }\r\n  }\r\n\r\n  @return if(type-of($map) != 'list', ($value,), $map);\r\n\r\n}\r\n$breakpoints: (\r\n  small: 0,\r\n  medium: 768px,\r\n  large: 1024px,\r\n  xlarge: 1200px,\r\n  xxlarge: 1400px,\r\n  xxxlarge: 1900px\r\n) !default;\r\n\r\n$print-breakpoint: large !default;\r\n\r\n$-zf-zero-breakpoint: small !default;\r\n\r\n$-zf-breakpoints-keys: map-to-list($breakpoints, 'keys');\r\n\r\n@if nth(map-values($breakpoints), 1) != 0 {\r\n  @error 'Your smallest breakpoint (defined in $breakpoints) must be set to \"0\".';\r\n}\r\n@else {\r\n  $-zf-zero-breakpoint: nth(map-keys($breakpoints), 1);\r\n}\r\n\r\n$breakpoint-classes: (small medium large xlarge xxlarge) !default;\r\n\r\n@function breakpoint($val: $-zf-zero-breakpoint) {\r\n  $bp: nth($val, 1);\r\n  $bp-max: 0;\r\n  $dir: if(length($val) > 1, nth($val, 2), up);\r\n  $str: '';\r\n  $named: false;\r\n\r\n  @if $bp == 'landscape' or $bp == 'portrait' {\r\n    @return '(orientation: #{$bp})';\r\n  }\r\n  @else if $bp == 'retina' {\r\n    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';\r\n  }\r\n  @if type-of($bp) == 'string' {\r\n    @if map-has-key($breakpoints, $bp) {\r\n      @if $dir == 'only' or $dir == 'down' {\r\n        $bp-max: -zf-map-next($breakpoints, $bp);\r\n      }\r\n\r\n      $bp: map-get($breakpoints, $bp);\r\n      $named: true;\r\n    }\r\n    @else {\r\n      $bp: 0;\r\n      @warn 'breakpoint(): \"#{$val}\" is not defined in your $breakpoints setting.';\r\n    }\r\n  }\r\n\r\n  $bp: -zf-bp-to-em($bp);\r\n  @if $bp-max {\r\n    $bp-max: -zf-bp-to-em($bp-max) - calc(1/16);\r\n  }\r\n  @if $bp > 0em or $dir == 'only' or $dir == 'down' {\r\n    @if $dir == 'only' {\r\n      @if $named == true {\r\n        @if $bp > 0em {\r\n          $str: $str + '(min-width: #{$bp})';\r\n\r\n          @if $bp-max != null {\r\n            $str: $str + ' and ';\r\n          }\r\n        }\r\n\r\n        @if $bp-max != null {\r\n          $str: $str + '(max-width: #{$bp-max})';\r\n        }\r\n      }\r\n      @else {\r\n        @warn 'breakpoint(): Only named media queries can have an `only` range.';\r\n      }\r\n    }\r\n\r\n    @else if $dir == 'down' {\r\n      $max: if($named, $bp-max, $bp);\r\n\r\n      @if $named or $bp > 0em {\r\n        @if $max != null {\r\n          $str: $str + '(max-width: #{$max})';\r\n        }\r\n      }\r\n    }\r\n\r\n    @else if $bp > 0em {\r\n      $str: $str + '(min-width: #{$bp})';\r\n    }\r\n  }\r\n\r\n  @return $str;\r\n}\r\n\r\n@mixin breakpoint($value) {\r\n  $str: breakpoint($value);\r\n  $bp: index($-zf-breakpoints-keys, $value);\r\n  $pbp: index($-zf-breakpoints-keys, $print-breakpoint);\r\n\r\n  $old-zf-size: null;\r\n\r\n  @if global-variable-exists(-zf-size) {\r\n    $old-zf-size: $-zf-size;\r\n  }\r\n  $-zf-size: nth($value, 1) !global; \r\n\r\n  @if $str == '' {\r\n    @content;\r\n  }\r\n\r\n  @else {\r\n    @if $bp != null and $bp <= $pbp {\r\n      @media print, screen and #{$str} {\r\n        @content;\r\n       }\r\n    }\r\n    @else {\r\n      @media screen and #{$str} {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $old-zf-size != null {\r\n    $-zf-size: $old-zf-size !global;\r\n  } @else {\r\n    $-zf-size: null !global;\r\n  }\r\n}\r\n\r\n\r\n\r\n@function -zf-map-next($map, $key) {\r\n\r\n  $values: map-keys($map);\r\n\r\n  $i: 0;\r\n\r\n  @if (map-has-key($map, $key)) {\r\n    $i: index($values, $key) + 1;\r\n  }\r\n\r\n  @if ($i > length($map) or $i == 0) {\r\n    @return null;\r\n  }\r\n  @else {\r\n    @return map-get($map, nth($values, $i));\r\n  }\r\n\r\n}\r\n\r\n@function -zf-breakpoints-less-than($key) {\r\n  $list: ();\r\n  $found_key: false;\r\n\r\n  @each $name in $-zf-breakpoints-keys {\r\n    @if ($name == $key) {\r\n      $found_key: true;\r\n    }\r\n    @if not $found_key {\r\n      $list: append($list, $name);\r\n    }\r\n  }\r\n  @return $list;\r\n}\r\n@function -zf-closest-named-breakpoint($breakpoint) {\r\n  $last: $-zf-zero-breakpoint;\r\n  $found: false;\r\n\r\n  $value: unitless-calc($breakpoint, 1px);\r\n  @each $key, $val in $breakpoints {\r\n    @if not $found {\r\n      @if unitless-calc($val) > $value {\r\n        $found: true;\r\n      } @else {\r\n        $last: $key;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $last;\r\n}\r\n\r\n@function -zf-get-bp-val($map, $value) {\r\n  @if type-of($map) == 'number' {\r\n    @return $map;\r\n  }\r\n  @if not map-has-key($breakpoints, $value) {\r\n    @if type-of($value) == 'number' {\r\n      $value: -zf-closest-named-breakpoint($value);\r\n    } @else {\r\n      @return null;\r\n    }\r\n  }\r\n  @else if map-has-key($map, $value) {\r\n    @return map-get($map, $value);\r\n  }\r\n  @else {\r\n    $anchor: null;\r\n    $found: false;\r\n\r\n    @each $key, $val in $breakpoints {\r\n      @if not $found {\r\n        @if map-has-key($map, $key) {\r\n          $anchor: $key;\r\n        }\r\n        @if $key == $value {\r\n          $found: true;\r\n        }\r\n      }\r\n    }\r\n\r\n    @return map-get($map, $anchor);\r\n  }\r\n}\r\n\r\n@if map-has-key($breakpoints, small) {\r\n  $small-up: screen;\r\n  $small-only: unquote('screen and #{breakpoint(small only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, medium) {\r\n  $medium-up: unquote('screen and #{breakpoint(medium)}');\r\n  $medium-only: unquote('screen and #{breakpoint(medium only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, large) {\r\n  $large-up: unquote('screen and #{breakpoint(large)}');\r\n  $large-only: unquote('screen and #{breakpoint(large only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, xlarge) {\r\n  $xlarge-up: unquote('screen and #{breakpoint(xlarge)}');\r\n  $xlarge-only: unquote('screen and #{breakpoint(xlarge only)}');\r\n}\r\n\r\n@if map-has-key($breakpoints, xxlarge) {\r\n  $xxlarge-up: unquote('screen and #{breakpoint(xxlarge)}');\r\n}\r\n"]}